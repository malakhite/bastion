services:
  backend:
    image: ghcr.io/malakhite/bastion-backend:main
    environment:
      DATABASE_URL: ${DATABASE_URL}
      HOST: ${HOST}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      ACCESS_TOKEN_EXPIRATION: ${ACCESS_TOKEN_EXPIRATION}
      SYNCRHONIZE_DB: true
    labels:
      traefik.enable: true
      traefik.docker.network: bastion_default
      traefik.http.routers.backend.tls.certresolver: prod
      traefik.http.routers.backend.rule: Host(`${HOST}`)
      traefik.http.services.backend.server.port: 3333
      traefik.http.services.backend.server.scheme: http
    networks:
      - default
    restart: unless-stopped

  proxy:
    image: traefik:v2.6
    command:
      - --log.level=INFO
      - --api=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesResolvers.prod.acme.tlschallenge=true
      - --certificatesResolvers.prod.acme.storage=/etc/traefik/acme.json
      - --certificatesResolvers.prod.acme.email=${ACME_EMAIL}
      - --certificatesResolvers.prod.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
    environment:
      TZ: ${TZ}
    labels:
      traefik.enable: true
      traefik.docker.network: bastion_default
      traefik.http.routers.traefik.tls.certresolver: prod
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_HOST}`)
    networks:
      - default
    ports:
      - 80:80/tcp
      - 433:433/tcp
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CONFIG_DIR}/traefik:/etc/traefik:rw

